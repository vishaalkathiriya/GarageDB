@model GarageDB.Models.Vehicle
@{
    ViewBag.Title = Model.ToString();
}

<div>
    <ol class="breadcrumb">
        <li>@Html.ActionLink((string)ViewBag.Customer.Name, "View", "Customers", new { ViewBag.Customer.Id }, null)</li>
        <li class="active">@Model.ToString()</li>
    </ol>
</div>

<h3>@ViewBag.Title</h3>

<div class="row">
    <div class="col-md-3">
        @Html.DisplayNameFor(o => o.RegistrationNumber)
    </div>
    <div class="col-md-3">
        @Html.DisplayFor(o => o.RegistrationNumber)
    </div>
    <div class="col-md-3">
        @Html.DisplayNameFor(o => o.Colour)
    </div>
    <div class="col-md-3">
        @Html.DisplayFor(o => o.Colour)
    </div>
    <div class="col-md-3">
        @Html.DisplayNameFor(o => o.Make)
    </div>
    <div class="col-md-3">
        @Html.DisplayFor(o => o.Make)
    </div>
    <div class="col-md-3">
        @Html.DisplayNameFor(o => o.Model)
    </div>
    <div class="col-md-3">
        @Html.DisplayFor(o => o.Model)
    </div>
    <div class="col-md-3">
        @Html.DisplayNameFor(o => o.VIN)
    </div>
    <div class="col-md-3">
        @Html.DisplayFor(o => o.VIN)
    </div>
</div>

<h3>History</h3>
@(Html.Kendo().Grid<GarageDB.Models.EntryViewModel>()
      .Name("History")
      .Columns(columns =>
      {
          columns.Bound(p => p.Id).Hidden(true);
          columns.Bound(p => p.Title).Title("");
          columns.Bound(p => p.Date).Format("{0:dd/MM/yyyy HH:mm}");
          columns.Template(x => { }).ClientTemplate(
                "<a class='k-button' href='" +
                    Url.Action("OpenEntry", "Vehicles") +
                    "/#= Id #'" +
                ">View</a>"
            ).Width(80);
      })
      .ClientRowTemplate("<tr bgcolor='#: Colour#'>"
              + "<td>#: Title#</td>"
              + "<td>#: DateToString#</td>"
              + "<td><a class='k-button' href='" +
                  Url.Action("OpenEntry", "Vehicles") +
              "/#= Id #'" +
              ">View</a></td>"
              + "</tr>")
              .Sortable()
              .Pageable()
          .DataSource(dataSource => dataSource
              .Ajax()
              .Model(model => model.Id(p => p.Id))
              .Read(read => read.Action("_ReadVehicleEntries", "Vehicles", new { Id = Model.Id }))
        )
)

<div class="button-group">
    <div class="btn-group" role="group">
        <button class="btn btn-default green-text" type="button" value="Add interim service" onclick="location.href='@Url.Action("AddInterim", "Servicing", new { VehicleId = Model.Id })'"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Interim service</button>

        <button class="btn btn-default green-text" type="button" value="Add full service" onclick="location.href='@Url.Action("AddFull", "Servicing", new { VehicleId = Model.Id })'"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Full service</button>

        <button class="btn btn-default green-text" type="button" value="Add major service" onclick="location.href='@Url.Action("AddMajor", "Servicing", new { VehicleId = Model.Id })'"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Major service</button>
    </div>

    <button class="btn btn-default green-text" type="button" value="Add MOT" onclick="location.href='@Url.Action("Add", "MOTs", new { VehicleId = Model.Id })'"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> MOT</button>

    <button class="btn btn-default green-text" type="button" value="Add sale" onclick="location.href='@Url.Action("Add", "Invoicing", new { VehicleId = Model.Id })'"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Sale</button>
</div>

<div class="button-group">
    <button class="btn btn-default" type="button" value="Customer" onclick="location.href='@Url.Action("View", "Customers", new { id = Model.CustomerId })'"><span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span> Customer details</button>

    <button class="btn btn-default" type="button" value="Edit" onclick="location.href='@Url.Action("Edit", "Vehicles", new { id = Model.Id })'"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Edit</button>

    <button class="btn btn-default delete-button red-text" value="Delete"><span class="glyphicon glyphicon-remove-circle" aria-hidden="true"></span> Delete</button>
</div>

<script id="delete-confirmation" type="text/x-kendo-template">
    <p class="delete-message">Are you sure that you want to delete @Model.ToString()?</p>
    <button class="delete-confirm k-button">Delete</button> &nbsp;
    <a href="#" class="delete-cancel k-button">Cancel</a>
</script>

<script>
    $(".delete-button").click(function (e) {
        e.preventDefault();

        var kendoWindow = $("<div />").kendoWindow({
            title: "Confirm",
            resizable: false,
            modal: true
        });

        kendoWindow.data("kendoWindow")
            .content($("#delete-confirmation").html())
            .center().open();

        kendoWindow
            .find(".delete-confirm,.delete-cancel")
                .click(function () {
                    if ($(this).hasClass("delete-confirm")) {
                        window.location.replace('/Vehicles/Delete/@Model.Id.ToString()');
                    }

                    kendoWindow.data("kendoWindow").close();
                })
                .end()
    });
</script>